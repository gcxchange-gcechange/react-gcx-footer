trigger:
  branches: 
    include: 
      - '*'

variables:
  - group: office365credentials 

stages:
- stage: Build
  dependsOn: []
  jobs:
############################################################
## installs: npm dependencies 
############################################################
    - job: build_package 
      displayName: SPFx build and packaging
      steps:
        - script: npm install
          displayName: Install npm dependencies 
############################################################
## executes: gulp build
############################################################
        - task: gulp@0
          displayName: SPFx build
          inputs:
            targets: build
############################################################
## executes: gulp bundle --ship 
############################################################
        - task: gulp@0
          displayName: SPFx bundle 
          inputs:
            targets: bundle
            arguments: --ship
############################################################
## executes: gulp package-solution --ship
############################################################
        - task: gulp@0
          displayName: SPFx package solution 
          inputs:
            targets: package-solution 
            arguments: --ship
############################################################
## evaluates: the name of the generated *.sppkg package
############################################################
        - script: |
            CMD_GET_SPPKG_NAME=$(find . -name '*.sppkg' -exec basename {} \;)
            echo "##vso[task.setvariable variable=SpPkgFilename;isOutput=true]${CMD_GET_SPPKG_NAME}"
          displayName: Get generated *.sppkg filename 
          name: GetSharePointPackage
############################################################
## debugs: for the list files in directory
############################################################          
        - script: |
            echo "Contents of $(Build.SourcesDirectory)/sharepoint/solution/"
            ls -l $(Build.SourcesDirectory)/sharepoint/solution/
          displayName: Debugging list files in directory
############################################################
## copy and publishes: *.sppkg as a build artifact 
############################################################
        - task: CopyFiles@2
          inputs:
            sourceFolder: $(Build.Repository.LocalPath)/sharepoint/solution
            contents: '**/*.sppkg'
            targetFolder: $(Build.ArtifactStagingDirectory)  
        - task: PublishBuildArtifacts@1
          displayName: Publish SharePoint Package (*.sppkg)
          inputs:
            pathToPublish: $(Build.ArtifactStagingDirectory)
            artifactName: spfx-package
            publishLocation: 'Container'

- stage: Test
  dependsOn: []
  jobs:
############################################################
## installs: npm dependencies 
############################################################
    - job: run_tests
      displayName: Install npm, haibun, and test dependencies 
      steps:
        - script: npm install 
          displayName: Install npm dependencies 
############################################################
## executes: gulp build
############################################################
        - task: gulp@0
          displayName: SPFx build
          inputs:
            targets: build
############################################################
## executes: tests
############################################################
        - script: npm run test
          displayName: Run test scripts
          continueOnError: true 
############################################################
## publishes: code coverage results to the pipeline run 
############################################################
        - task: PublishCodeCoverageResults@1
          displayName: Publish Code Coverage Results 
          inputs:
            codecoverageTool: cobertura 
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
############################################################
## publishes: test results using junit tests to the pipeline run
############################################################
        - task: PublishTestResults@2
          displayName: Publish Test Results
          inputs:
            testResultsFormat: JUnit
            testResultsFiles: '**/junit.xml'
            failTaskOnFailedTests: true

- stage: Deploy_Development 
  dependsOn:
    - Build
    - Test 
  variables:
    SpPkgFilename: $[StageDependencies.Build. build_package.outputs['GetSharePointPackage.SpPkgFilename']]

  jobs:
    - deployment: deploy_dev_sppkg
      displayName: Deploy to Dev Environment 
      environment: Development 
      strategy: 
        runOnce:
          deploy:
            steps:
############################################################
## installs: Office M365 CLI
############################################################
              - script: sudo npm install --global  @pnp/cli-microsoft365
                displayName: Install OfficeM365 CLI
############################################################
## logs in: Office M365 CLI
############################################################
              - script: m365 login --authType deviceCode
                displayName: Login to OfficeM365
############################################################
## downloads: the previously built artifact package *.sppkg
############################################################
#              - task: DownloadPipelineArtifact@2
#                displayName: Download SharePoint Package (*.sppkg)
#                inputs:
#                  buildType: 'specific'
#                  project: $(System.TeamProject)
#                  pipeline: 35
#                  buildVersionToDownload: 'latest'
#                  artifactName: 'spfx-package'
#                  downloadPath: $(Pipeline.Workspace)

              - script: |
                  echo "Contents of $(Pipeline.Workspace):"
                  ls -l $(Pipeline.Workspace)
                  echo "Contents of $(Pipeline.Workspace)/spfx-package:"
                  ls -l $(Pipeline.Workspace)/spfx-package
                displayName: List files in workspace
############################################################
## determines: the name of generated and previously built artifact package *.sppkg
############################################################
#              - script: |
#                  CMD_GET_SPPKG_NAME=$(find $(Pipeline.Workspace)/spfx-package -name '*.sppkg' -exec basename {} \;)
#                  echo "##vso[task.setvariable variable=SpPkgFilename;isOutput=true]${CMD_GET_SPPKG_NAME}"
#                displayName: Get generated *.sppkg filename 
#                name: GetSharePointPackage

#              - script: |
#                  echo "Looking for *.sppkg files in $(Pipeline.Workspace)/spfx-package"
#                  find $(Pipeline.Workspace)/spfx-package -name '*.sppkg'
#                displayName: Debugging *.sppkg file search
############################################################
## uploads: the *.sppkg package to the app-catalog
############################################################
      
              - script: m365 spo app add -p '$(Pipeline.Workspace)/spfx-package/$(SpPkgFilename)' --appCatalogUrl https://devgcx.sharepoint.com/sites/appcatalog/_layouts/15/tenantAppCatalog.aspx --scope sitecollection --overwrite
                displayName: Verify Filename

#              - script: |
#                  echo "Filename obtained: $(GetSharePointPackage.SpPkgFilename)"
#                displayName: Verify the file is uploaded

############################################################
## deploys: the *.sppkg package to the app-catalog
############################################################
              - script: m365 spo app deploy -name $(SpPkgFilename) -u https://devgcx.sharepoint.com/sites/appcatalog/_layouts/15/tenantAppCatalog.aspx --scope sitecollection --skipFeatureDeployment
                displayName: Deploy SharePoint package to the App Catalog
